{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-community/async-storage\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"D:\\\\react\\\\smsApp\\\\src\\\\form.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar App = function (_Component) {\n  (0, _inherits2.default)(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, App);\n    _this = _super.call(this);\n\n    _this.saveValueFunction = function () {\n      if (_this.state.textInputData) {\n        _asyncStorage.default.setItem('any_key_here', _this.state.textInputData);\n\n        _this.setState({\n          textInputData: ''\n        });\n\n        alert('Data Saved');\n      } else {\n        alert('Please fill data');\n      }\n    };\n\n    _this.getValueFunction = function () {\n      _asyncStorage.default.getItem('any_key_here').then(function (value) {\n        return _this.setState({\n          getValue: value\n        });\n      });\n    };\n\n    _this.state = {\n      textInputData: '',\n      getValue: ''\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.MainContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        placeholder: \"Enter Some Text here\",\n        value: this.state.textInputData,\n        onChangeText: function onChangeText(data) {\n          return _this2.setState({\n            textInputData: data\n          });\n        },\n        underlineColorAndroid: \"transparent\",\n        style: styles.TextInputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: this.saveValueFunction,\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, \" SAVE VALUE \")), _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: this.getValueFunction,\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, \" GET VALUE \")), _react.default.createElement(_reactNative.Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, \" \", this.state.getValue, \" \"));\n    }\n  }]);\n  return App;\n}(_react.Component);\n\nexports.default = App;\n\nvar styles = _reactNative.StyleSheet.create({\n  MainContainer: {\n    alignItems: 'center',\n    flex: 1,\n    margin: 10,\n    marginTop: 60\n  },\n  TextInputStyle: {\n    textAlign: 'center',\n    height: 40,\n    width: '100%',\n    borderWidth: 1,\n    borderColor: '#808000'\n  },\n  button: {\n    width: '100%',\n    height: 40,\n    padding: 10,\n    backgroundColor: '#808000',\n    marginTop: 10\n  },\n  buttonText: {\n    color: '#fff',\n    textAlign: 'center'\n  },\n  text: {\n    fontSize: 20,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["D:/react/smsApp/src/form.js"],"names":["App","saveValueFunction","state","textInputData","AsyncStorage","setItem","setState","alert","getValueFunction","getItem","then","value","getValue","styles","MainContainer","data","TextInputStyle","button","buttonText","text","Component","StyleSheet","create","alignItems","flex","margin","marginTop","textAlign","height","width","borderWidth","borderColor","padding","backgroundColor","color","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport AsyncStorage from '@react-native-community/async-storage'\r\nimport { StyleSheet, View, TextInput, Button, Alert, Text, TouchableOpacity } from 'react-native';\r\n\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      textInputData: '',\r\n      getValue: '',\r\n    };\r\n  }\r\n  saveValueFunction = () => {\r\n    if(this.state.textInputData){\r\n      AsyncStorage.setItem('any_key_here', this.state.textInputData);\r\n      this.setState({ textInputData: '' })\r\n      alert('Data Saved');\r\n    }else{\r\n      alert('Please fill data');\r\n    }\r\n  };\r\n  getValueFunction = () => {\r\n    AsyncStorage.getItem('any_key_here').then(value =>\r\n      this.setState({ getValue: value })\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <View style={styles.MainContainer}>\r\n        <TextInput\r\n          placeholder=\"Enter Some Text here\"\r\n          value={this.state.textInputData}\r\n          onChangeText={data => this.setState({ textInputData: data })}\r\n          underlineColorAndroid=\"transparent\"\r\n          style={styles.TextInputStyle}\r\n        />\r\n        <TouchableOpacity\r\n          onPress={this.saveValueFunction}\r\n          style={styles.button}>\r\n          <Text style={styles.buttonText}> SAVE VALUE </Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          onPress={this.getValueFunction}\r\n          style={styles.button}>\r\n          <Text style={styles.buttonText}> GET VALUE </Text>\r\n        </TouchableOpacity>\r\n        <Text style={styles.text}> {this.state.getValue} </Text>\r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  MainContainer: {\r\n    alignItems: 'center',\r\n    flex: 1,\r\n    margin: 10,\r\n    marginTop:60\r\n  },\r\n  TextInputStyle: {\r\n    textAlign: 'center',\r\n    height: 40,\r\n    width: '100%',\r\n    borderWidth: 1,\r\n    borderColor: '#808000',\r\n  },\r\n  button: {\r\n    width: '100%',\r\n    height: 40,\r\n    padding: 10,\r\n    backgroundColor: '#808000',\r\n    marginTop: 10,\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n  },\r\n  text: {\r\n    fontSize: 20,\r\n    textAlign: 'center',\r\n  },\r\n});"]},"metadata":{},"sourceType":"script"}